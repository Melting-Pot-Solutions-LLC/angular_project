var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Injector, HostBinding, Output, EventEmitter, NgZone } from '@angular/core';
import { animate, state, style, transition, trigger } from '@angular/animations';
var AlertComponent = (function () {
    function AlertComponent(_injector, _ngZone) {
        this._injector = _injector;
        this._ngZone = _ngZone;
        this.animationState = 'enter';
        this.close = new EventEmitter();
        this.incomingData = {
            message: '',
            overlay: true,
            overlayClickToClose: true,
            showCloseButton: true,
            duration: 0
        };
    }
    AlertComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.type = this._injector.get('type');
        for (var key in this.incomingData)
            this.incomingData[key] = this._injector.get(key);
        if (this.incomingData.duration) {
            this._ngZone.runOutsideAngular(function () {
                return setTimeout(function () {
                    return _this._ngZone.run(function () {
                        return _this.closeSelf();
                    });
                }, _this.incomingData.duration);
            });
        }
    };
    AlertComponent.prototype.closeSelf = function () {
        this.animationState = 'leave';
        this.close.emit(Object.assign({ close: true }, this.incomingData));
    };
    AlertComponent.prototype.overlayClick = function () {
        if (!this.incomingData.overlayClickToClose)
            return;
        this.closeSelf();
    };
    return AlertComponent;
}());
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AlertComponent.prototype, "close", void 0);
__decorate([
    HostBinding('class'),
    __metadata("design:type", String)
], AlertComponent.prototype, "type", void 0);
AlertComponent = __decorate([
    Component({
        selector: 'jaspero-alert',
        template: "\n        <div *ngIf=\"incomingData.overlay\" class=\"jaspero__overlay\" [@overlayAn]=\"animationState\" (click)=\"overlayClick()\"></div>\n        <div class=\"jaspero__dialog\" [@wrapperAn]=\"animationState\">\n            <div class=\"jaspero__dialog-icon\" [ngSwitch]=\"type\">\n                <ng-template ngSwitchCase=\"success\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 490.4 490.4\">\n                        <path d=\"M245.2 0C110 0 0 110 0 245.2s110 245.2 245.2 245.2 245.2-110 245.2-245.2S380.4 0 245.2 0zm0 465.9c-121.7 0-220.7-99-220.7-220.7s99-220.7 220.7-220.7 220.7 99 220.7 220.7-99 220.7-220.7 220.7z\"/>\n                        <path d=\"M309.4 185.5l-94 93.5-34.3-34.5c-4.8-4.8-12.5-4.8-17.3-.1-4.8 4.7-4.8 12.5-.1 17.3l42.9 43.2c2.4 2.4 5.5 3.6 8.7 3.6 3.1 0 6.2-1.2 8.6-3.6l102.7-102.1c4.8-4.8 4.8-12.5.1-17.3-4.8-4.8-12.5-4.8-17.3 0z\"/>\n                    </svg>\n                </ng-template>\n                \n                <ng-template ngSwitchCase=\"error\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 490.4 490.4\">\n                        <path d=\"M245.2 490.4c135.2 0 245.2-110 245.2-245.2S380.4 0 245.2 0 0 110 0 245.2s110 245.2 245.2 245.2zm0-465.9c121.7 0 220.7 99 220.7 220.7s-99 220.7-220.7 220.7-220.7-99-220.7-220.7 99-220.7 220.7-220.7z\"/>\n                        <path d=\"M180.3 310.1c2.4 2.4 5.5 3.6 8.7 3.6s6.3-1.2 8.7-3.6l47.6-47.6 47.6 47.6c2.4 2.4 5.5 3.6 8.7 3.6s6.3-1.2 8.7-3.6c4.8-4.8 4.8-12.5 0-17.3l-47.8-47.6 47.6-47.6c4.8-4.8 4.8-12.5 0-17.3s-12.5-4.8-17.3 0l-47.6 47.6-47.6-47.6c-4.8-4.8-12.5-4.8-17.3 0s-4.8 12.5 0 17.3l47.6 47.6-47.6 47.6c-4.8 4.8-4.8 12.5 0 17.3z\"/>\n                    </svg>\n                </ng-template>\n                \n                <ng-template ngSwitchCase=\"warning\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 294.951 294.951\">\n                        <path d=\"M147.475 103.102c-5.22 0-8.7 3.48-8.7 8.7v62.645c0 5.22 3.48 8.7 8.7 8.7 5.22 0 8.7-3.48 8.7-8.7v-62.644c0-5.22-3.48-8.7-8.7-8.7zm5.22 109.628c-3.48-3.48-8.7-3.48-12.18 0-1.74 1.74-1.74 5.22-1.74 6.96 0 3.48 0 5.22 1.74 6.96 1.74 1.74 5.22 1.74 6.96 1.74 1.74 0 5.22 0 3.48-1.74 1.74-1.74 3.48-5.22 3.48-6.96 0-3.48 0-5.22-1.74-6.96z\"/>\n                        <path d=\"M288.425 214.47L185.758 35.238c-6.96-13.92-22.62-22.62-38.283-22.62-15.66 0-29.582 8.7-38.283 22.62L6.525 214.47c-8.7 13.92-8.7 31.322 0 45.243 6.96 13.92 22.62 22.62 38.283 22.62h205.334c17.4 0 31.322-8.7 38.283-22.62 8.7-13.92 8.7-31.322 0-45.243zm-13.92 38.283c-3.48 8.7-12.182 13.92-22.622 13.92H44.808c-8.7 0-17.4-5.22-22.62-13.92-5.22-8.7-5.22-19.14 0-27.842L124.853 45.68c3.48-8.7 12.18-13.92 22.62-13.92 10.442 0 19.142 5.22 24.363 13.92l102.668 179.23c5.22 8.7 5.22 19.142 0 27.843z\"/>\n                    </svg>\n                </ng-template>\n                \n                <ng-template ngSwitchCase=\"info\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 65 65\">\n                        <path d=\"M32.5 0C14.58 0 0 14.58 0 32.5S14.58 65 32.5 65 65 50.42 65 32.5 50.42 0 32.5 0zm0 61C16.785 61 4 48.215 4 32.5S16.785 4 32.5 4 61 16.785 61 32.5 48.215 61 32.5 61z\"/>\n                        <circle cx=\"33.018\" cy=\"19.541\" r=\"3.345\"/>\n                        <path d=\"M32.137 28.342c-1.104 0-2 .896-2 2v17c0 1.104.896 2 2 2s2-.896 2-2v-17c0-1.105-.896-2-2-2z\"/>\n                    </svg>\n                </ng-template>\n            </div>\n            \n            <div class=\"jaspero__dialog-title\">\n                {{type}}!\n            </div>\n            <div class=\"jaspero__dialog-content\">\n                {{incomingData.message}}\n            </div>\n            <div class=\"jaspero__dialog-actions\">\n                <button type=\"button\" class=\"default\" *ngIf=\"incomingData.showCloseButton\" (click)=\"closeSelf()\">Close</button>\n            </div>\n        </div>\n    ",
        styles: ["\n        :host {\n            display: block;\n            display: -ms-flexbox;\n            display: flex;\n            -ms-flex-flow: column;\n            flex-flow: column;\n            -ms-flex-pack: center;\n            justify-content: center;\n            -ms-flex-align: center;\n            align-items: center;\n            position: fixed;\n            top: 0;\n            right: 0;\n            bottom: 0;\n            left: 0;\n            z-index: 108;\n            pointer-events: auto;\n        }\n\n        .jaspero__overlay {\n            top: 0;\n            right: 0;\n            bottom: 0;\n            left: 0;\n            background-color: rgba(141, 150, 165, 0.71);\n            transform: translateZ(0);\n            opacity: 0;\n            transition: all .5s cubic-bezier(.35,0,.25,1);\n            position: fixed;\n            z-index: 109;\n        }\n\n        .jaspero__dialog {\n            min-width: 300px;\n            max-width: 400px;\n            max-height: 50%;\n            display: -ms-flexbox;\n            display: flex;\n            -ms-flex-flow: column;\n            flex-flow: column;\n            overflow: hidden;\n            position: relative;\n            z-index: 110;\n            outline: none;\n            border-radius: 2px;\n            opacity: 0;\n            box-shadow: 0 7px 9px -4px rgba(0,0,0,.2), 0 14px 21px 2px rgba(0,0,0,.14), 0 5px 26px 4px rgba(0,0,0,.12);\n            -ms-transform: scale(.9,.85);\n            transform: scale(.9,.85);\n            -ms-transform-origin: center center;\n            transform-origin: center center;\n            transition: opacity .4s cubic-bezier(.25,.8,.25,1),transform .4s cubic-bezier(.25,.8,.25,1) .05s;\n            will-change: opacity,transform;\n            background-color: #fff;\n            color: rgba(0, 0, 0, .87);\n        }\n\n        .jaspero__dialog-icon {\n            padding: 40px 20px 0;\n            text-align: center;\n        }\n        .jaspero__dialog-icon svg {\n            width: 80px;\n            height: 80px;\n        }\n\n        .jaspero__dialog-icon svg path {\n            fill: white;\n        }\n\n        .jaspero__dialog-title {\n            font-size: 24px;\n            letter-spacing: .005em;\n            line-height: 26px;\n            margin-bottom: 20px;\n            padding: 20px 20px 0;\n            text-transform: capitalize;\n            text-align: center;\n            font-weight: 500;\n        }\n\n        .jaspero__dialog-content {\n            padding: 0 20px 30px;\n            -ms-flex: 1;\n            flex: 1;\n            overflow: auto;\n            position: relative;\n            text-align: center;\n            font-weight: 400;\n        }\n\n        .jaspero__dialog-actions {\n            min-height: 45px;\n            padding: 0;\n            display: -ms-flexbox;\n            display: flex;\n            -ms-flex-align: center;\n            align-items: center;\n            -ms-flex-pack: end;\n            justify-content: flex-end;\n            position: relative;\n        }\n\n        .jaspero__dialog-actions button {\n            width: 100%;\n            min-height: 45px;\n            margin: 0;\n            padding: 0 16px;\n            display: inline-block;\n            position: relative;\n            overflow: hidden;\n            outline: none;\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            cursor: pointer;\n            background: rgba(141, 150, 165, 0.2);\n            border: 0;\n            border-radius: 2px;\n            transition: all .4s cubic-bezier(.25,.8,.25,1);\n            color: currentColor;\n            font-family: inherit;\n            font-size: 14px;\n            font-style: inherit;\n            font-variant: inherit;\n            font-weight: 500;\n            letter-spacing: inherit;\n            line-height: 45px;\n            text-align: center;\n            text-transform: uppercase;\n            text-decoration: none;\n            vertical-align: top;\n            white-space: nowrap;\n        }\n\n        .jaspero__dialog-actions button.default {\n            color: inherit;\n        }\n\n        .jaspero__dialog-actions button.default:hover {\n            background-color: rgba(141, 150, 165, 0.15);\n        }\n\n        .jaspero__dialog-actions button.primary {\n            background-color: #ec4a1d;\n            color: white;\n        }\n\n        .jaspero__dialog-actions button.primary:hover {\n            background-color: #1e88e5;\n        }\n\n        .jaspero__dialog-actions button.raised {\n            box-shadow: 0 1px 5px rgba(0,0,0,.2), 0 2px 2px rgba(0,0,0,.14), 0 3px 1px -2px rgba(0,0,0,.12);\n        }\n\n        :host(.success) .jaspero__dialog-icon svg path {fill: #17A398}\n        :host(.error) .jaspero__dialog-icon svg path {fill: #D64550}\n        :host(.warning) .jaspero__dialog-icon svg path {fill: #FFC857}\n        :host(.info) .jaspero__dialog-icon svg path, :host(.info) .jaspero__dialog-icon svg circle {fill: #8FBFE0}\n    "],
        animations: [
            trigger('overlayAn', [
                state('void', style({ opacity: 0 })),
                state('leave', style({ opacity: 0 })),
                state('enter', style({ opacity: 1 })),
                transition('void => enter', animate('400ms cubic-bezier(.25,.8,.25,1)')),
                transition('enter => leave', animate('400ms cubic-bezier(.25,.8,.25,1)'))
            ]),
            trigger('wrapperAn', [
                state('void', style({ opacity: 0, transform: 'scale(0.75, 0.75) translate(0, 0)' })),
                state('leave', style({ opacity: 0, transform: 'scale(0.75, 0.75) translate(0, 0)' })),
                state('enter', style({ opacity: 1, transform: 'scale(1, 1) translate(0, 0)' })),
                transition('void => enter', animate('450ms cubic-bezier(.5, 1.4, .5, 1)')),
                transition('enter => leave', animate('450ms cubic-bezier(.5, 1.4, .5, 1)'))
            ])
        ]
    }),
    __metadata("design:paramtypes", [Injector,
        NgZone])
], AlertComponent);
export { AlertComponent };
//# sourceMappingURL=alert.component.js.map