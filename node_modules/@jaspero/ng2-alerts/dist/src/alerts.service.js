var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { Injectable } from '@angular/core';
import { Subject } from 'rxjs/Subject';
var AlertsService = (function () {
    function AlertsService() {
        this.alert$ = new Subject();
    }
    AlertsService.prototype.create = function (type, message, settingsOverrides) {
        if (settingsOverrides === void 0) { settingsOverrides = {}; }
        this.alert$.next({ type: type, message: message, override: settingsOverrides });
    };
    return AlertsService;
}());
AlertsService = __decorate([
    Injectable()
], AlertsService);
export { AlertsService };
//# sourceMappingURL=alerts.service.js.map